{"ast":null,"code":"var _jsxFileName = \"/Users/oleh/Documents/Projects/IT/GitHub/React/goit-react-hw-01-components/src/components/FriendList/index.jsx\";\nimport propTypes from 'prop-types';\nimport FriendListItem from '../FriendListItem';\nimport cssFriendList from '../FriendList/FriendList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FriendList = _ref => {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"friend-list\",\n    children: friends.map(el => /*#__PURE__*/_jsxDEV(FriendListItem, {\n      avatar: el.avatar,\n      name: el.name,\n      isOnline: el.isOnline\n    }, el.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FriendList;\nFriendList.propTypes = {\n  friends: propTypes.arrayOf(propTypes.shape({\n    id: propTypes.number.isRequired,\n    avatar: propTypes.string.isRequired,\n    name: propTypes.string.isRequired,\n    isOnline: propTypes.bool.isRequired\n  }))\n};\nexport default FriendList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["/Users/oleh/Documents/Projects/IT/GitHub/React/goit-react-hw-01-components/src/components/FriendList/index.jsx"],"names":["propTypes","FriendListItem","cssFriendList","FriendList","friends","map","el","avatar","name","isOnline","id","arrayOf","shape","number","isRequired","string","bool"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;;;AAEA,MAAMC,UAAU,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAClC,sBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA,cACGA,OAAO,CAACC,GAAR,CAAYC,EAAE,iBACb,QAAC,cAAD;AAEE,MAAA,MAAM,EAAEA,EAAE,CAACC,MAFb;AAGE,MAAA,IAAI,EAAED,EAAE,CAACE,IAHX;AAIE,MAAA,QAAQ,EAAEF,EAAE,CAACG;AAJf,OACOH,EAAE,CAACI,EADV;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAbD;;KAAMP,U;AAeNA,UAAU,CAACH,SAAX,GAAuB;AACrBI,EAAAA,OAAO,EAAEJ,SAAS,CAACW,OAAV,CACPX,SAAS,CAACY,KAAV,CAAgB;AACdF,IAAAA,EAAE,EAAEV,SAAS,CAACa,MAAV,CAAiBC,UADP;AAEdP,IAAAA,MAAM,EAAEP,SAAS,CAACe,MAAV,CAAiBD,UAFX;AAGdN,IAAAA,IAAI,EAAER,SAAS,CAACe,MAAV,CAAiBD,UAHT;AAIdL,IAAAA,QAAQ,EAAET,SAAS,CAACgB,IAAV,CAAeF;AAJX,GAAhB,CADO;AADY,CAAvB;AAWA,eAAeX,UAAf","sourcesContent":["import propTypes from 'prop-types';\nimport FriendListItem from '../FriendListItem';\nimport cssFriendList from '../FriendList/FriendList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className=\"friend-list\">\n      {friends.map(el => (\n        <FriendListItem\n          key={el.id}\n          avatar={el.avatar}\n          name={el.name}\n          isOnline={el.isOnline}\n        />\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      avatar: propTypes.string.isRequired,\n      name: propTypes.string.isRequired,\n      isOnline: propTypes.bool.isRequired,\n    })\n  ),\n};\n\nexport default FriendList;\n"]},"metadata":{},"sourceType":"module"}